private static final int NOTIFICATION_ID = 1;
    public static final String MY_CHANNEL_ID = "myChannel";

    private void createChannel() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            NotificationChannel channel = new NotificationChannel(
                    MY_CHANNEL_ID,
                    "MySuperChannel",
                    NotificationManager.IMPORTANCE_DEFAULT
            );
            channel.setDescription("SUSCRIBETE");

            NotificationManager notificationManager =
                    (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);

            notificationManager.createNotificationChannel(channel);
        }
    }

    private void createSimpleNotification(String titulo, String descripcion) {
        Intent intent = new Intent(this, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);

        int flag = (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) ?
                PendingIntent.FLAG_IMMUTABLE : 0;

        PendingIntent pendingIntent =
                PendingIntent.getActivity(this, 0, intent, flag);

        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, MY_CHANNEL_ID)
                .setSmallIcon(R.drawable.ic_launcher_background) // Cambia a tu propio recurso de icono
                .setContentTitle("¡¡ Tienes una tarea que hacer hoy !!")
                .setContentText(titulo)
                .setStyle(new NotificationCompat.BigTextStyle()
                        .bigText(descripcion))
                .setContentIntent(pendingIntent)
                .setPriority(NotificationCompat.PRIORITY_DEFAULT)
                .setAutoCancel(true); // Cierra la notificación al hacer clic en ella

        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(this);

        // Verificar permisos en tiempo de ejecución
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS) !=
                PackageManager.PERMISSION_GRANTED) {
            // Solicitar permisos en tiempo de ejecución si no están otorgados
            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.POST_NOTIFICATIONS}, 1);
        } else {
            // Mostrar la notificación
            notificationManager.notify(NOTIFICATION_ID, builder.build());
        }
    }